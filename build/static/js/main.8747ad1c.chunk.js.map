{"version":3,"sources":["utils.js","ScoreTable.js","Histogram.js","ResultsPanel.js","ReactionTimeTest.js","AimTest.js","App.js","serviceWorker.js","index.js"],"names":["identity","x","comp","fns","reduceRight","g","f","last","arr","length","times","c","classConcat","classes","reduce","classList","item","mapLength","n","Array","from","Math","abs","_","i","mean","array","s","Number","NaN","total","clamp","nMin","nMax","RangeError","min","max","mod","m","modChop","epsilon","EPSILON","getPrecision","maxPrec","eps","k","round","log10","getTimerInfo","minPrec","res","POSITIVE_INFINITY","performance","now","resolution","precision","formatDelta","delta","prec","isNaN","className","toFixed","ScoreTable","props","data","rounds","xbar","key","defaultProps","Option","Select","Title","Typography","Text","Histogram","initializeHistogram","padding","width","height","innerWidth","left","right","innerHeight","top","bottom","globalSummary","q1","q3","histogram","binStart","binWidth","rawData","cutoff","bins","ceil","fill","bin","freq","tot","cumData","map","quantile","d3","domain","keys","range","yScale","a","xScaleMs","xScale","easeEl","amplitude","period","setState","hist","appear","duration","disappear","appearEase","t","disappearEase","areaGen","curve","x0","y0","y1","callout","value","translateY","style","selectAll","join","classed","attr","annotation","call","text","split","d","node","getBBox","y","w","drawHistogram","state","rootSvg","ref","current","append","root","tickFormat","showHistogram","enter","transition","ease","delay","update","exit","remove","updateDensity","histSel","kernel","bandwidth","showDensity","showPoints","points","pointData","density","K","normalize","exp","sqrt","PI","cos","cosh","kde","j","binnedKDE","dlen","interp","interpY","shift","flatGen","densityTransitionChange","densityRoot","raise","densityAreaNode","tooltip","invert","on","mx","areaWidth","React","createRef","defaultKernel","defaultBandwidth","this","title","trigger","placement","content","level","defaultChecked","onChange","disabled","strong","defaultValue","step","tooltipVisible","EllipsisOutlined","prevProps","prevState","snapshot","fn","setTimeout","revealPoints","Component","ResultsPanel","query","console","log","type","ReactionTimeTest","submitTimes","user","timer","fetch","method","headers","body","JSON","stringify","then","response","json","updateResults","insertId","catch","error","resultsId","results","handleTestStart","testActive","roundActive","testComplete","handleRoundStart","triggerTime","roundFailed","triggered","timeoutId","random","maxWait","minWait","handleActiveTestClick","time","newState","clearTimeout","suffix","generateStatusAndMessage","status","message","direction","size","onMouseDown","Target","r","pos","rings","cr","rest","StartButton","children","RESULTS_COLUMNS","dataIndex","render","row","p0","p1","clickPos","hypot","ms","minSegs","overflow","mods","seps","digits","trunc","floor","str","toString","padStart","formatMilliseconds","clickTime","spawnTime","AimTest","spawnRandomTarget","targetSpawnTime","testArea","obj","takeValues","handleTargetClick","event","nativeEvent","testLog","spawnPos","targetPos","offsetX","offsetY","testTimeout","targetRadius","pick","onClick","bordered","pagination","columns","dataSource","rowKey","minWidth","maxWidth","Link","Header","Layout","Content","Footer","App","footerLinks","reverse","id","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8747ad1c.chunk.js","sourcesContent":["/*\n * utils.js\n *\n * Some general helper functions, mostly functional programming constructs that js doesn't have standard versions of.\n * Feel free to add!\n *\n * */\n\n//------------ PRIVATE FUNCTIONS  ------------//\n\n// import * as d3 from 'd3';\n// import {sum as d3Sum, mean as d3Mean} from 'd3';\nimport * as d3 from 'd3';\n\nexport const identity = (x) => x;\n\n//------------ EXPORTED FUNCTIONS  ------------//\n\n// Returns f if it is a function, the identity fn otherwise.\n/**\n * Returns <tt>f</tt> if it is a function, or the identity function otherwise.\n * @param f\n * @returns {function}\n */\nexport function orIdentity(f) {\n  return typeof f === 'function' ? f : identity;\n}\n\n/**\n * Returns the functional composition of its arguments.\n * @example\n * comp(f, g, h) // equivalent to (x) => f(g(h(x)))\n * @param {function} fns\n * @returns {function}\n */\nexport function comp(...fns) {\n  return fns.reduceRight((g, f) => (...x) => f(g(...x)));\n}\n\n/**\n * Returns the functional right-composition of its arguments.\n *\n * @example\n * rightComp(f, g, h) // equivalent to (x) => h(g(f(x)))\n * @param {function} fns\n * @returns {function}\n */\nexport function rightComp(...fns) {\n  return fns.reduce((g, f) => (...x) => f(g(...x)));\n}\n\n/**\n * Returns the first element of <tt>a</tt>.\n * @param {*[]} arr\n * @returns {*}\n */\nexport function first(arr) {\n  return arr[0];\n}\n\n/**\n * Returns the second element of <tt>a</tt>.\n * @param {*[]} arr\n * @returns {*}\n */\nexport function second(arr) {\n  return arr[1];\n}\n\n/**\n * Returns the last element of <tt>a</tt>.\n * @param {*[]} arr\n * @returns {*}\n */\nexport function last(arr) {\n  return arr[arr.length - 1];\n}\n\n/**\n * Returns copy of <tt>a</tt> without the first element.\n * @param {*[]} arr\n * @returns {*[]}\n */\nexport function rest(arr) {\n  return arr.slice(1);\n}\n\n/**\n * Returns copy of <tt>a</tt> without the last element.\n * @param {*[]} arr\n * @returns {*[]}\n */\nexport const most = (arr) => arr.slice(0, -1);\n\n/**\n * Returns !x\n * @param x\n * @returns {boolean}\n */\nexport const not = (x) => !x;\n\n/**\n * Function that behaves like the || operator, returning its first truthy argument, or its last argument if none are truthy.\n * @param args\n * @returns {*}\n */\nexport const or = (...args) => args.find(identity) || last(args);\n\n/**\n * Returns a function that returns its first truthy argument, or <tt>def</tt> if none exists.\n * @param def\n * @returns {function(...[*]): *}\n */\nexport const orDefault = (def) => (...args) => or(...args, def);\n\n/**\n * Function that behaves like the && operator, returning its first falsy argument, or its last argument if none are falsy.\n * @param args\n * @returns {*}\n */\nexport const and = (...args) => args.find(not) && last(args);\n\n/**\n * Returns a function that returns its first falsy argument, or <tt>def</tt> if none exists.\n * @param def\n * @returns {function(...[*]): *}\n */\nexport const andDefault = (def) => (...args) => and(...args, def);\n\n/**\n * Returns the function that extracts the item at key <tt>k</tt> from its argument.\n * If <tt>k</tt> is a negative numerical index, <tt>part(k)</tt> returns a function to extract <tt>k</tt>th from last item.\n * @param {string|number} k The string or index to be used as a key.\n * @returns {function}\n */\nexport function part(k) {\n  return k < 0 ? (a) => a[a.length + k] : (a) => a[k];\n}\n\nexport const times = (c) => (x) => x * c;\nexport const plus = (c) => (x) => x + c;\n\n/** Returns space-separated string concatenation of truthy arguments.\n\n Useful for conditionally assigning classes;\n <tt>classConcat(cond1 && class1, cond2 && class2, ...)</tt> \n returns the string of classes whose associated conditions are true.\n * @param {*} classes\n * @return string\n */\nexport function classConcat(...classes) {\n  return classes.reduce(\n    (classList, item) => (item ? classList + ' ' + item : classList),\n    ''\n  );\n}\n\n/* Group items in a collection using a function.\ngroupBy(coll, f) returns a new Map\n{ x1 => [ e in coll such that f(e) === x1 ],\n  x2 => [ e in coll such that f(e) === x2 ], ... }\n*/\nexport function groupBy(coll, f) {\n  const map = new Map();\n  for (const el of coll) {\n    const key = f(el);\n    if (map.has(key)) {\n      map.get(key).push(el);\n    } else {\n      map.set(key, [el]);\n    }\n  }\n  return map;\n}\n\n/* Count the number of items in a collection.\ntally(coll) returns a new Map associating distinct elements of coll with the # of times they appear.\ntally(coll, f) returns a new Map\n{ x1 => (# of e in coll such that f(e) === x1),\n  x2 => (# of e in coll such that f(e) === x2), ... }\n* */\nexport function tally(coll, f = identity) {\n  const map = new Map();\n  for (const el of coll) {\n    const key = f(el);\n    map.set(key, (map.get(key) || 0) + 1);\n  }\n  return map;\n}\n\n/**\n * n dimensional euclidean distance.\n * @param {number[]} p0\n * @param {number[]} p1\n * @returns {number}\n */\nexport function dist(p0, p1) {\n  if (p0.length !== p1.length) {\n    throw new TypeError(`Arguments ${p0} and ${p1} have unequal dimension.`);\n  }\n  return Math.hypot(...p0.map((pi, i) => pi - p1[i]));\n}\n\n/**\n * Euclidean distance optimized for R2.\n * @param {number[]} p0\n * @param {number[]} p1\n * @returns {number}\n */\n\nexport function dist2d(p0, p1) {\n  return Math.hypot(p0[0] - p1[0], p0[1] - p1[1]);\n}\n\n/**\n * Returns the millisecond duration <tt>ms</tt> as a timestring in the format <tt>DDd hh:mm:ss:lll</tt>.\n *\n * The optional argument minSegs can be used to change the minimum number of segments in the output.\n * By default, the result consists of two segments (seconds and milliseconds), with minutes, hours, and days\n * hidden unless their values are nonzero.\n *\n * In general, enough segments are included to fully describe the given duration.\n * Setting the optional argument overflow to false will prevent the inclusion of additional segments, ensuring\n * the result has exactly minSegs segments (taken from right to left).\n *\n * @param {number} ms - Number of milliseconds.\n * @param {number} [minSegs=2] - Minimum number of sections in returned string.\n * @param {boolean} [overflow=true] - Whether to add additional sections as needed.\n * @returns {string} - A string in <tt>...dd:hh:mm:ss:lll</tt> format.\n *\n * @example\n * formatMilliseconds(1234) // '01.234'\n * formatMilliseconds(-123456) // '-02:03.456'\n * formatMilliseconds(123) // '00.123'\n * formatMilliseconds(123, 1) // '123'\n * formatMilliseconds(123, 3) // '00:00.123'\n * formatMilliseconds(0.125, 0) // ''\n * formatMilliseconds(0.125, 1) // '000'\n * formatMilliseconds(123456, 2) // '02:03.456'\n * formatMilliseconds(123456, 2, false) // '03.456'\n * formatMilliseconds(123456, 4, false) // '00:02:03.456'\n */\nexport function formatMilliseconds(ms, minSegs = 2, overflow = true) {\n  const mods = [1000, 60, 60, 24]; // modulus for ms, sec, min, hr\n  const seps = ['', '.', ':', ':']; // separator characters\n  const digits = (n) =>\n    // returns # of decimal digits in integer part of n, or 0 if the integer part of n is 0.\n    (n = Math.trunc(n)) && comp(Math.floor, Math.log10, Math.abs)(n) + 1;\n\n  const [t, str] = mods.reduce(\n    ([t, str], m, i) => [\n      Math.floor(t / m),\n      ((overflow && (t = Math.floor(t % m))) || minSegs > i\n        ? t.toString().padStart(digits(m - 1), '0') + seps[i]\n        : '') + str,\n    ],\n    [Math.abs((ms = Math.round(ms))), '']\n  );\n\n  return (\n    (ms < 0 ? '-' : '') + (t || minSegs >= 5 ? t.toFixed() + 'd ' : '') + str\n  );\n}\n\n// Returns execution time for f(...args) along with its result\nexport function timing(f, ...args) {\n  const t0 = performance.now();\n  const res = f(...args);\n  const t1 = performance.now();\n\n  return {time: t1 - t0, result: res};\n}\n\n// Runs f(...args) n times, returning execution time statistics and last evaluation result.\nexport function repeatedTiming(n, f, ...args) {\n  n = Math.floor(n);\n  if (n < 1) throw new TypeError('Number of trials should be greater than 1.');\n  if (n === 1) return timing(f, ...args);\n  const times = [];\n  let t0, t1, result;\n  let i = n;\n  while (i--) {\n    t0 = performance.now();\n    result = f(...args);\n    t1 = performance.now();\n    times.push(t1 - t0);\n  }\n\n  const avgTime = times.reduce((a, b) => a + b, 0) / n;\n  return {\n    avgTime,\n    trials: n,\n    minTime: Math.min(...times),\n    maxTime: Math.max(...times),\n    stdDev: Math.sqrt(\n      times.reduce((s, t) => s + (t - avgTime) ** 2, 0) / (n - 1)\n    ),\n    result,\n  };\n}\n\n/**\n * Returns the result of mapping f over a range of integers.\n * @param {number} n -- a number\n * @param {function(number)} f -- a function\n * @returns {*[]} [f(0), f(1), ..., f(floor(n-1))] if n >= 0 <br/>\n * [f(0), f(-1), ..., f(ceil(n+1))] if n < 0\n */\nexport function mapLength(n, f) {\n  return Array.from(\n    {length: Math.abs(n)},\n    n >= 0 ? (_, i) => f(i) : (_, i) => f(-i)\n  );\n}\n\n/* Gets the specified properties of an object as an array, with optional transformation.\n takeValues(obj, [k1, k2, ...]) ~~> [ obj[k1], obj[k2], ... ]\n takeValues(obj, [k1, k2, ...], f) ~~> [ f(obj[k1], k1), f(obj[k2], k2), ... ]\n*/\nexport function takeValues(obj, keys, f = identity) {\n  return keys.map((k) => f(obj[k], k));\n}\n\nexport function total(array) {\n  return array.length ? array.reduce((s, x) => s + x, 0) : Number.NaN;\n}\n\nexport function mean(array) {\n  return array.length ? total(array) / array.length : Number.NaN;\n}\n\nexport function clamp(n, nMin, nMax) {\n  if (nMin > nMax) {\n    throw new RangeError(`[${nMin}, ${nMax}] is not a valid interval.`);\n  }\n  return Math.min(Math.max(n, nMin), nMax);\n}\n\nexport function chop(n, epsilon = Number.EPSILON) {\n  return Math.abs(n) < epsilon ? 0 : n;\n}\n\n// Mathematical modulo operation. Sign of result is determined by second argument: mod(x, n) is in [0, n) for n > 0, or\n// (n, 0] for n < 0. mod(x, 0) returns NaN for all x.\nfunction mod(x, n) {\n  const m = x % n;\n  return m + (m && x * n < 0 ? n : 0); // add n when m is not 0 and x and n have different signs\n}\n\n// modChop(x, n, ε) ~~> 0 if mod(x, n) ∈ [0, ε] ∪ [n − ε, n),\n//                      mod(x, n) otherwise.\nfunction modChop(x, n, epsilon = Number.EPSILON) {\n  const m = mod(x, n);\n  return Math.abs(m) <= epsilon || Math.abs(m - n) <= epsilon ? 0 : m;\n}\n\n// Attempts to determine the number of fixed digits of decimal precision returned by performance.now();\n// This may be a nonpositive or even negative integer, depending on the coarseness of the timer.\nfunction getPrecision(x, maxPrec = 2) {\n  if (maxPrec < 0) throw new RangeError('maxPrec must be nonnegative.');\n  if (x === 0) return Number.NaN;\n\n  const eps = 10 ** -maxPrec; // precision threshold\n  x = Math.abs(x); // ensure x is positive\n  // we want the greatest integer k such that x ≡ 0 (mod 10^k) Clearly k is bounded above by log10(x).\n  // Furthermore, if x has a nonzero fractional part, then k <= log10(x mod 1).\n  let k = Math.round(Math.log10(modChop(x, 1, eps) || x));\n  while (modChop(x, 10 ** k, eps) && -maxPrec <= k) {\n    k--;\n  }\n\n  return -k || 0;\n}\n\n// Attempts to measure the resolution of performance.now() in milliseconds.\n// Returns an object with keys {resolution, precision}.\nfunction getTimerInfo(minPrec = 0, maxPrec = 2) {\n  let res = Number.POSITIVE_INFINITY;\n  for (\n    let i = 0, m = 0, n = 0;\n    i < 3 && (i + 1) * (n - m) < 1000; // repeat 3 times or until total computation time risks exceeding 1000ms.\n    i++, res = Math.min(n - m, res)\n  ) {\n    m = performance.now();\n    while (m === (n = performance.now())) {} // wait for performance.now() to change value\n  }\n\n  return {\n    resolution: res,\n    precision: clamp(getPrecision(res, maxPrec), minPrec, maxPrec),\n  };\n}\n\n// log argument, then return it\nexport function echo(arg, ...rest) {\n  console.log(...rest, arg);\n  return arg;\n}\n\n// bisection method for finding y coordinate on a path at a particular x\n// Given:\n//    path: DOM node for an svg path element tracing a parametric path\n//      p(t) = { x: x(t), y: y(t) }, 0 <= t <= path.totalLength(), where x(t) is monotonic,\n//    mx: a real number\n// Returns: the point p(t*) = { x: x(t*), y: y(t*) }, where t* is the integer minimizing |x(t*) - mx|.\n/* TODO: You could probably implement Newton's method if you could figure out how d3 generates\n    its control points for the spline. That might be cool. */\nexport function getPointOnPathFromX(path, mx) {\n  const p = (t) => path.getPointAtLength(t);\n  let t, pt;\n  let a = 0,\n    b = path.getTotalLength();\n  if (p(b).x - p(a).x < 0) [a, b] = [b, a]; // ensure x(a) <= x(b)\n  while (true) {\n    t = Math.floor((a + b) / 2); // t is an integer\n    pt = p(t);\n\n    if ((a === t || b === t) && pt.x !== mx) /* close enough! */ break;\n    else if (pt.x > mx) b = t;\n    else if (pt.x < mx) a = t;\n    else break; //position found\n  }\n\n  return pt;\n}\n\n\n// Kernel density estimator for binned frequency data\nexport function binnedKDE(data, kernel, bandwidth, normalize = true) {\n  let K;\n  K =\n    typeof kernel === 'function'\n      ? kernel\n      : kernel === 'uniform'\n      ? (x) => (Math.abs(x) <= 1 ? 0.5 : 0)\n      : kernel === 'triangular'\n      ? (x) => ((x = Math.abs(x)) <= 1 ? 1 - x : 0)\n      : kernel === 'gaussian'\n      ? (x) => Math.exp(-0.5 * x ** 2) / Math.sqrt(2 * Math.PI)\n      : kernel === 'cosine'\n      ? (x) =>\n          Math.abs(x) <= 1 ? 0.25 * Math.PI * Math.cos(0.5 * Math.PI * x) : 0\n      : kernel === 'sigmoid'\n      ? (x) => 1 / (Math.PI * Math.cosh(x))\n      : (x) => (Math.abs(x) <= 1 ? 0.75 * (1 - x ** 2) : 0); // Default quadratic\n\n  if (normalize) {\n    const kde = mapLength(data.length, (i) =>\n      d3.mean(data, (freq, j) => freq * K((i - j) / bandwidth))\n    );\n    return kde.map(times(1 / d3.sum(kde)));\n  } else {\n    mapLength(\n      data.length,\n      (i) =>\n        d3.mean(data, (freq, j) => freq * K((i - j) / bandwidth)) / bandwidth\n    );\n  }\n}\n\nexport {mod, modChop, getTimerInfo, getPrecision};\n","import {classConcat, mapLength, mean} from './utils';\nimport React from 'react';\nimport './ScoreTable.less';\n\nfunction formatDelta(delta, prec) {\n  return typeof delta !== 'number' || Number.isNaN(delta) ? (\n    <td className=\"delta\" />\n  ) : (\n    <td\n      className={classConcat(\n        'delta',\n        delta > 0 ? 'positive' : delta < 0 ? 'negative' : 'zero'\n      )}\n    >\n      {(delta >= 0 ? '+' : '-') + Math.abs(delta).toFixed(prec)}\n    </td>\n  );\n}\n\nexport function ScoreTable(props) {\n  const {data, rounds, precision: prec} = props;\n  const xbar = mean(data);\n  return (\n    <div className=\"ScoreTable\">\n      <table>\n        <thead>\n          <tr>\n            <th>ROUND</th>\n            <th>TIME (ms)</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {mapLength(rounds, (i) =>\n            i < data.length ? (\n              <tr key={i + 1}>\n                <td>{i + 1}</td>\n                <td>{data[i].toFixed(prec)}</td>\n                {formatDelta(\n                  // when only one data point, delta is NaN, and formatDelta returns empty tag.\n                  i === data.length - 1 && data[i] - data[i - 1]\n                )}\n              </tr>\n            ) : (\n              <tr key={i + 1}>\n                <td>{i + 1}</td>\n                <td />\n                <td />\n              </tr>\n            )\n          )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td />\n            <td>{xbar.toFixed(Math.min(2, prec + 2)) /* mean */}</td>\n            {formatDelta(\n              // change in mean from last round\n              (data[data.length - 1] - xbar) / (data.length - 1),\n              Math.min(2, prec + 2)\n            )}\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  );\n}\n\nScoreTable.defaultProps = {\n  data: [],\n  rounds: 5,\n  precision: 2,\n};\n","import React, {Component} from 'react';\nimport * as d3 from 'd3';\nimport {binnedKDE, classConcat, identity, last} from './utils';\nimport {Card, Popover, Select, Slider, Switch, Typography} from 'antd';\nimport {EllipsisOutlined} from '@ant-design/icons';\nimport './Histogram.less';\n\nconst {Option} = Select;\nconst {Title, Text} = Typography;\n\nfunction spaceData(data, totalLength, indexKey, valueKey, defaultValue = 0) {\n  const spacedData = new Array(totalLength).fill(defaultValue);\n\n  for (const {[indexKey]: idx, [valueKey]: datum} of data) {\n    if (idx < totalLength) spacedData[idx] = datum;\n  }\n\n  return spacedData;\n}\n\nclass Histogram extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      showHistogram: true,\n      showDensity: true,\n      showPoints: true,\n      kernel: props.defaultKernel,\n      bandwidth: props.defaultBandwidth,\n    };\n  }\n\n  initializeHistogram = () => {\n    const {padding, width, height} = this.props;\n    // if (typeof padding === 'number') {\n    //   padding = {top: padding, bottom: padding, left: padding, right: padding};\n    // }\n    const innerWidth = width - (padding.left + padding.right || 2 * padding);\n    const innerHeight = height - (padding.top + padding.bottom || 2 * padding);\n    const {\n      globalSummary: {q1, q3},\n      histogram: {binStart, binWidth, data: rawData},\n    } = this.props.data;\n\n    const cutoff = q3 + 2 * (q3 - q1);\n    const bins = Math.ceil((cutoff - binStart) / binWidth);\n    // const data = spaceData(rawData, bins, 'bin', 'freq', 0);\n\n    const data = new Array(bins).fill(0);\n    for (const {bin, freq} of rawData) if (bin < bins) data[bin] = freq;\n    let tot = 0;\n    const cumData = [0, ...data.map((freq) => (tot += freq))];\n\n    // const quantileInterpolator = d3.interpolateBasis(cumData);\n    const quantile = d3\n      .scaleLinear()\n      .domain([...cumData.keys(), last(rawData).bin])\n      .range([...cumData, 1])\n      .clamp(true);\n\n    // const quantileInterpolator = d3.piecewise(d3.interpolateNumber, cumData);\n    // const clen = cumData.length;\n    // shift right by 1/2 an index ( the result of shifting 1 right to account for control point, then left 1/2 to center with bin)\n    // const quantileInterpolate = (t, tMax) => quantileInterpolator(t / tMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, data.reduce((a, x) => Math.max(a, x))])\n      .range([innerHeight, 0]);\n\n    // scale bin index to milliseconds\n    const xScaleMs = d3\n      .scaleLinear()\n      .domain([0, bins - 1])\n      .range([binStart, binStart + (bins - 1) * binWidth]);\n\n    // scale bin index to svg coordinates\n    const xScale = d3.scaleLinear().domain([0, bins]).range([0, innerWidth]);\n\n    const easeEl = d3.easeElastic.amplitude(1.78).period(0.733);\n    this.setState({\n      hist: {\n        innerWidth,\n        innerHeight,\n        xScale,\n        xScaleMs,\n        yScale,\n        bins,\n        data,\n        quantile,\n        appear: d3.transition().duration(750),\n        disappear: d3.transition().duration(400),\n        appearEase: (t) => Math.max(easeEl(t), 0),\n        disappearEase: d3.easeBackIn,\n        areaGen: d3\n          .area()\n          .curve(d3.curveBasis)\n          .x0((_, i) => xScale(i - 1 / 2))\n          .y0(yScale(0))\n          .y1(yScale),\n        callout: (g, value, translateY = 0) => {\n          if (!value) return g.style('display', 'none');\n\n          g.style('display', null)\n            .style('pointer-events', 'none')\n            .style('user-select', 'none')\n            .style('font', '10px sans-serif');\n\n          // crosshair\n          g.selectAll('circle.mouse-crosshair')\n            .data([null])\n            .join('circle')\n            .classed('mouse-crosshair', true)\n            .attr('cx', '0')\n            .attr('cy', '0')\n            .attr('r', '3px');\n\n          // vertical line\n          g.selectAll('line.vertical-line')\n            .data([null])\n            .join('line')\n            .classed('vertical-line', true)\n            .attr('x1', 0)\n            .attr('x2', 0)\n            .attr('y1', 0)\n            .attr('y2', innerHeight - translateY);\n\n          const annotation = g\n            .selectAll('text')\n            .data([null])\n            .join('text')\n            .call((text) =>\n              text\n                .selectAll('tspan')\n                .data((value + '').split(/\\n/))\n                .join('tspan')\n                .attr('x', 0)\n                .attr('y', (d, i) => `${i * 1.1}em`)\n                .style('font-weight', (_, i) => (i ? null : 'bold'))\n                .text(identity)\n            );\n\n          const {y, width: w} = annotation.node().getBBox();\n          annotation.attr('transform', `translate(${-w / 2},${y - 15})`);\n        },\n      },\n    });\n  };\n\n  drawHistogram = () => {\n    const {\n      innerWidth,\n      innerHeight,\n      xScale,\n      xScaleMs,\n      yScale,\n      data,\n      appear,\n      appearEase,\n      disappear,\n      disappearEase,\n    } = this.state.hist;\n\n    const padding = this.props.padding;\n\n    const histSel = d3.select(this.ref.current);\n    // histSel.selectAll('svg').remove();\n\n    const rootSvg = histSel\n      .selectAll('svg.root-svg')\n      .data([null])\n      .join('svg')\n      .attr('class', 'root-svg')\n      .attr('width', this.props.width)\n      .attr('height', this.props.height);\n\n    rootSvg\n      .selectAll('defs')\n      .data([null])\n      .join('defs')\n      .append('clipPath')\n      .attr('id', 'rect-clip')\n      .append('rect')\n      .attr('x', 0)\n      .attr('y', -(padding.top || padding))\n      .attr('width', innerWidth)\n      .attr('height', innerHeight + (padding.top || padding));\n\n    const root = rootSvg\n      .selectAll('g.root-transform')\n      .data([null])\n      .join('g')\n      .attr('class', 'root-transform')\n      .attr(\n        'transform',\n        `translate(${padding.left || padding},${padding.top || padding})`\n      );\n\n    // Draw axes\n    root\n      .selectAll('g.x-axis')\n      .data([null])\n      .join('g')\n      .attr('class', 'x-axis')\n      .attr('transform', `translate(0,${innerHeight})`)\n      .call(d3.axisBottom(xScale).tickFormat((x) => xScaleMs(x).toFixed()))\n      .selectAll('text')\n      .attr('transform', 'translate(-10, 0) rotate(-45)')\n      .attr('class', 'x-axis-text');\n\n    root\n      .selectAll('g.y-axis')\n      .data([null])\n      .join('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(yScale))\n      .selectAll('text')\n      .attr('class', 'y-axis-text');\n\n    //TODO: axis labels\n\n    // Draw bars\n    root\n      .selectAll('rect.histogram-bar')\n      .data(this.state.showHistogram ? data : [])\n      .join(\n        (enter) =>\n          enter\n            .append('rect')\n            .attr('class', 'histogram-bar')\n            .attr('x', (_, i) => xScale(i))\n            .attr('y', innerHeight)\n            .attr('width', xScale(1))\n            .attr('height', 0)\n            .call((enter) =>\n              enter\n                .transition(appear)\n                .ease(appearEase)\n                .delay((_, i) => i * 20)\n                .attr('height', (d) => innerHeight - yScale(d))\n                .attr('y', yScale)\n            ),\n        (update) =>\n          update.call((update) =>\n            update\n              .transition()\n              .attr('height', (d) => innerHeight - yScale(d))\n              .attr('y', yScale)\n          ),\n        (exit) =>\n          exit.call((exit) =>\n            exit\n              .transition(disappear)\n              .ease(disappearEase)\n              // .delay((_, i, {length}) => (length - i) * 20)\n              .attr('y', innerHeight)\n              .attr('height', 0)\n              .remove()\n          )\n      );\n\n    this.updateDensity();\n  };\n\n  updateDensity = () => {\n    const histSel = d3.select(this.ref.current);\n\n    const {\n      hist: {\n        data,\n        quantile,\n        xScale,\n        xScaleMs,\n        yScale,\n        callout,\n        innerWidth,\n        innerHeight,\n        appear,\n        appearEase,\n        disappear,\n        disappearEase,\n        areaGen,\n      },\n      kernel,\n      bandwidth,\n      showDensity,\n      showPoints,\n    } = this.state;\n    const {points, padding} = this.props;\n\n    const pointData =\n      points && showPoints ? [points.mean, ...points.times] : [];\n\n    // pad array with zeros, which will later be clipped.\n    // This gives us the freedom to shift our control points to the center of each interval.\n    const density = showDensity\n      ? binnedKDE([0, ...data, 0], kernel, bandwidth)\n      : [0, 0];\n    const dlen = density.length - 1;\n    const interp = d3.interpolateBasis(density);\n    const interpY = (x) => yScale(interp((x + 0.5) / dlen));\n    const shift = 0.5 / dlen;\n\n    // Generates float area\n    const flatGen = d3\n      .area()\n      .curve(d3.curveBasis)\n      .x((_, i) => xScale(i - 1 / 2))\n      .y0(yScale(0))\n      .y1(yScale(0));\n\n    const densityTransitionChange = d3.transition().duration(100);\n\n    const rootSel = histSel.selectAll('g.root-transform');\n\n    const densityRoot = rootSel\n      .selectAll('g.density-root')\n      .data([null])\n      .join('g')\n      .attr('class', 'density-root')\n      .raise();\n\n    const densityArea = densityRoot\n      .selectAll('path.density-area')\n      .data(showDensity ? [density] : [])\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('class', 'density-area')\n            .attr('clip-path', 'url(#rect-clip)')\n            .attr('d', flatGen)\n            .call((enter) =>\n              enter.transition(appear).ease(appearEase).attr('d', areaGen)\n            ),\n        (update) =>\n          update.call((update) =>\n            update.transition(densityTransitionChange).attr('d', areaGen)\n          ),\n        (exit) =>\n          exit.call((exit) =>\n            exit\n              .transition(disappear)\n              .transition(disappear)\n              .ease(disappearEase)\n              .attr('d', flatGen)\n              .remove()\n          )\n      );\n\n    const densityAreaNode = densityArea.node();\n\n    const tooltip = densityRoot\n      .selectAll('g.histogram-tooltip')\n      .data(showDensity ? [null] : [])\n      .join('g')\n      .attr('class', 'histogram-tooltip');\n\n    densityRoot\n      .selectAll('circle.query-point')\n      .data(showDensity ? pointData.map(xScaleMs.invert) : [])\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr('class', (_, i) => classConcat('query-point', !i && 'mean'))\n            .attr('cx', xScale)\n            .attr('cy', interpY)\n            .attr('r', 0)\n            .call((enter) =>\n              enter\n                .transition(appear)\n                .transition()\n                .duration(250)\n                .ease(d3.easeExpIn)\n                .delay((_, i) => i * 25)\n                .attr('r', (_, i) => (i ? 3 : 4))\n            ),\n        (update) =>\n          update.call((update) =>\n            update\n              .transition(densityTransitionChange)\n              .attr('cy', interpY)\n              .attr('cx', xScale)\n              .attr('r', (_, i) => (i ? 3 : 4))\n          ),\n        (exit) =>\n          exit.call((exit) =>\n            exit\n              .transition(disappear)\n              .ease(disappearEase)\n              // .attr('cy', yScale(0))\n              // .delay((_, i) => i * 25)\n              .attr('r', 0)\n              .remove()\n          )\n      );\n\n    densityRoot\n      .selectAll('rect.interaction-panel')\n      .raise()\n      .data(showDensity ? [null] : [])\n      .join('rect')\n      .attr('class', 'interaction-panel')\n      .attr('fill', 'none')\n      .attr('stroke', 'none')\n      .attr('width', innerWidth)\n      .attr('y', -(padding.top || padding))\n      .attr('height', innerHeight + (padding.top || padding))\n      .on('touchmove mousemove', function () {\n        const mx = d3.mouse(densityAreaNode)[0];\n        const areaWidth = densityAreaNode.getBBox().width;\n        const px = mx / areaWidth;\n        const x = (mx / areaWidth) * dlen;\n        const y = interp(px + shift);\n        tooltip\n          .attr('transform', `translate(${mx},${yScale(y)})`)\n          .call(\n            callout,\n            `${xScaleMs(x).toFixed(2)}ms\\n${(100 * (1 - quantile(x))).toFixed(\n              2\n            )}th percentile`,\n            yScale(y)\n          );\n      })\n      .on('touchend mouseleave', function () {\n        tooltip.call(callout, null);\n      });\n  };\n\n  componentDidMount() {\n    this.initializeHistogram();\n  }\n\n  render() {\n    return (\n      <Card title={null} className={classConcat('Histogram', this.props.className)}>\n        <Popover\n          trigger=\"click\"\n          placement=\"rightTop\"\n          content={\n            <div className=\"settings-content\">\n              <div className=\"title-and-switch\">\n                <Title level={4}>Histogram</Title>\n                <Switch\n                  defaultChecked\n                  onChange={(value) => this.setState({showHistogram: value})}\n                />\n              </div>\n              <div className=\"title-and-switch\">\n                <Title level={4}>Density</Title>\n                <Switch\n                  defaultChecked\n                  onChange={(value) => this.setState({showDensity: value})}\n                />\n              </div>\n              <div className=\"title-and-switch\">\n                <Title level={4}>Points</Title>\n                <Switch\n                  defaultChecked\n                  disabled={!this.state.showDensity}\n                  onChange={(value) => this.setState({showPoints: value})}\n                />\n              </div>\n              <Text strong>Kernel</Text>\n              <Select\n                disabled={!this.state.showDensity}\n                defaultValue={this.state.kernel}\n                onChange={(value) =>\n                  this.setState({kernel: value}, this.updateDensity)\n                }\n              >\n                <Option value=\"uniform\"> Uniform</Option>\n                <Option value=\"triangular\">Triangular</Option>\n                <Option value=\"quadratic\"> Quadratic</Option>\n                <Option value=\"gaussian\"> Gaussian</Option>\n                <Option value=\"sigmoid\"> Sigmoid</Option>\n                <Option value=\"cosine\"> Cosine</Option>\n              </Select>\n              <div className=\"bandwidth-slider-label\">\n                <Text strong>Bandwidth</Text>\n                <Text>{this.state.bandwidth.toFixed(1)}</Text>\n              </div>\n              <div className=\"bandwidth-slider\">\n                <Slider\n                  disabled={!this.state.showDensity}\n                  step={0.1}\n                  min={0.1}\n                  max={20}\n                  tooltipVisible={false}\n                  defaultValue={this.state.bandwidth}\n                  onChange={(value) => {\n                    this.setState({bandwidth: value});\n                  }}\n                />\n              </div>\n            </div>\n          }\n        >\n          <EllipsisOutlined className=\"settings-icon\" />\n        </Popover>\n        {this.props.title !== null && <Title className=\"histogram-title\" level={3}>{this.props.title}</Title>}\n        <div className=\"plot-area\" ref={this.ref} />\n      </Card>\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const fn = () => setTimeout(() => this.setState({showPoints: true}), 300);\n    if (prevProps.data !== this.props.data) {\n      this.initializeHistogram();\n    } else if (prevState !== this.state) {\n      if (\n        prevState.hist !== this.state.hist ||\n        prevState.showHistogram !== this.state.showHistogram\n      ) {\n        this.drawHistogram();\n      } else if (\n        prevProps.points !== this.props.points &&\n        this.state.showPoints\n      ) {\n        this.setState({showPoints: false, revealPoints: true}, fn);\n      } else {\n        this.updateDensity();\n      }\n    } else if (\n      prevProps.points !== this.props.points &&\n      this.state.showPoints\n    ) {\n      this.setState({showPoints: false, revealPoints: true}, fn);\n    }\n  }\n  /*\n      Object.keys(this.props.data).forEach((key) => {\n        console.log(\n          key,\n          this.props.data[key] !== prevProps.data[key] ? ' not equal' : ' equal'\n        );\n      });\n    } else {\n      console.log('data equal');\n    }\n    this.drawHistogram();\n \n * */\n}\n\nHistogram.defaultProps = {\n  data: {},\n  padding: {top: 30, right: 30, bottom: 70, left: 60},\n  width: 660,\n  height: 400,\n  defaultBandwidth: 2,\n  defaultKernel: 'quadratic',\n  title: null,\n  className: null,\n};\n\nexport default Histogram;\n","import React, {Component} from 'react';\nimport {classConcat, mapLength} from './utils';\nimport {Space, Typography, Button, Card} from 'antd';\nimport './ResultsPanel.less';\nimport Histogram from './Histogram';\nimport * as d3 from 'd3';\n// import {scaleLinear} from 'd3-scale';\n\nconst {Title, Text} = Typography;\n\nclass ResultsPanel extends Component {\n  constructor(props) {\n    super(props);\n    const {query, ...data} = props.data;\n    this.state = {\n      bandwidth: props.bandwidth,\n      kernel: 'quadratic',\n      query: query,\n      data: data,\n    };\n    console.log(query);\n    console.log(data);\n  }\n\n  render() {\n    const type = this.props.type;\n    return (\n      <div className={classConcat('ResultsPanel', type)}>\n        {/*<Title>RESULTS</Title>*/}\n        <Card className=\"stats-card\">\n          <div className=\"label-and-stat\">\n            <Text strong>Mean Time</Text>\n            <Text>{this.state.query['mean'].toFixed(2)}ms</Text>\n          </div>\n          <div className=\"label-and-stat\">\n            <Text strong>Mean Percentile</Text>\n            <Text>{((1 - this.state.query['meanQuantile']) * 100).toFixed(2)}</Text>\n          </div>\n        </Card>\n\n        {/*<Button*/}\n        {/*  onClick={() => {*/}\n        {/*    const newTimes = mapLength(5, () => Math.random() * 600 + 50);*/}\n        {/*    this.setState({*/}\n        {/*      query: {*/}\n        {/*        id: null,*/}\n        {/*        times: newTimes,*/}\n        {/*        mean: d3.mean(newTimes),*/}\n        {/*        sd: d3.deviation(newTimes),*/}\n        {/*        meanQuantile: null,*/}\n        {/*        sdQuantile: null,*/}\n        {/*      },*/}\n        {/*    });*/}\n        {/*  }}*/}\n        {/*>*/}\n        {/*  Randomize Times*/}\n        {/*</Button>*/}\n        <Histogram\n          className=\"histogram-card\"\n          data={this.state.data}\n          points={this.state.query}\n          padding={30}\n          bandwidth={this.state.bandwidth}\n          kernel={this.state.kernel}\n          title=\"Here's a Histogram!\"\n        />\n      </div>\n    );\n  }\n}\n\nResultsPanel.defaultProps = {\n  type: 'ReactionTimeTest',\n  data: {},\n  bandwidth: 2.1,\n};\n\nexport default ResultsPanel;\n","import React, {Component} from 'react';\nimport {Button, Space, Statistic, Typography} from 'antd';\nimport {getTimerInfo, mapLength, mean} from './utils';\n// import _ from 'lodash';\nimport * as d3 from 'd3';\nimport './ReactionTimeTest.less';\nimport {ScoreTable} from './ScoreTable';\nimport ResultsPanel from './ResultsPanel';\n\nconst {Text, Title} = Typography;\n\nclass ReactionTimeTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.resultsId = null;\n    this.triggerTime = null;\n    this.timer = null;\n    this.state = {\n      testActive: false,\n      roundActive: false,\n      roundFailed: false,\n      triggered: false,\n      timeoutId: null,\n      round: null,\n      times: [],\n      results: null,\n    };\n    this.timer = getTimerInfo();\n\n/*\n    //Test data\n    this.state = {\n      testActive: false,\n      roundActive: false,\n      roundFailed: false,\n      triggered: false,\n      timeoutId: null,\n      round: null,\n      times: [291.0750000155531, 281.27500001573935, 290.0750000262633, 270.9000000031665, 253.12499998835847,],\n      results: {\n        globalSummary: {n: 495, mean: 401.3, sd: 522.603, min: 1.03, q1: 259.137, median: 297.605, q3: 369.628, max: 5635.48},\n        histogram: {\n          bins: 202,\n          binStart: 0,\n          binWidth: 27.94,\n          data: [{bin: 0, freq: 0.0263}, {bin: 1, freq: 0.0101}, {bin: 2, freq: 0.0061}, {bin: 3, freq: 0.0162,}, {bin: 4, freq: 0.0101}, {bin: 5, freq: 0.0121}, {bin: 6, freq: 0.0182}, {bin: 7, freq: 0.0384,}, {bin: 8, freq: 0.0848}, {bin: 9, freq: 0.1394}, {bin: 10, freq: 0.204}, {bin: 11, freq: 0.103,}, {bin: 12, freq: 0.0707}, {bin: 13, freq: 0.0465}, {bin: 14, freq: 0.0202}, {bin: 15, freq: 0.0364,}, {bin: 16, freq: 0.0263}, {bin: 17, freq: 0.0162}, {bin: 18, freq: 0.0101}, {bin: 19, freq: 0.0121,}, {bin: 20, freq: 0.0061}, {bin: 21, freq: 0.0081}, {bin: 22, freq: 0.0121}, {bin: 23, freq: 0.004,}, {bin: 24, freq: 0.002}, {bin: 25, freq: 0.002}, {bin: 26, freq: 0.002}, {bin: 28, freq: 0.002,}, {bin: 29, freq: 0.004}, {bin: 31, freq: 0.0061}, {bin: 34, freq: 0.002}, {bin: 36, freq: 0.002,}, {bin: 37, freq: 0.002}, {bin: 39, freq: 0.0061}, {bin: 41, freq: 0.002}, {bin: 46, freq: 0.004,}, {bin: 49, freq: 0.002}, {bin: 65, freq: 0.002}, {bin: 72, freq: 0.002}, {bin: 78, freq: 0.002,}, {bin: 79, freq: 0.002}, {bin: 80, freq: 0.002}, {bin: 101, freq: 0.002}, {bin: 105, freq: 0.002,}, {bin: 127, freq: 0.002}, {bin: 144, freq: 0.002}, {bin: 163, freq: 0.002}, {bin: 183, freq: 0.002,}, {bin: 201, freq: 0.002}],\n        },\n        query: {\n          id: 124,\n          times: [291.075, 281.275, 290.075, 270.9, 253.125],\n          mean: 277.29,\n          sd: 15.765,\n          meanQuantile: 0.2551020408,\n          sdQuantile: 0.0408163265,\n        },\n      },\n      testComplete: false,\n    };\n*/\n  }\n\n  submitTimes = (user, times, timer) => {\n    console.log('submitting times.');\n    fetch('/api/reaction-time', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({user, times, resolution: timer.resolution}),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.updateResults(data.insertId);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  updateResults = (resultsId) => {\n    this.resultsId = resultsId;\n    console.log('updating results');\n    this.setState({results: null}, () =>\n      fetch(`/api/reaction-time?id=${resultsId}`)\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data);\n          this.setState({results: data});\n        })\n        .catch((error) => {\n          console.log('a badness!');\n          console.error(error);\n        })\n    );\n  };\n\n  generateStatusAndMessage() {\n    const state = this.state;\n    return state.roundFailed\n      ? [\n          'round-failed',\n          <div className=\"reaction-area-message\">\n            <span className=\"message-main\">Too quick!</span>\n            <span className=\"message-subtitle\">Click to try again!</span>\n          </div>,\n        ]\n      : state.triggered\n      ? [\n          'triggered',\n          <div className=\"reaction-area-message\">\n            <span className=\"message-main\">Go! Go! Go!</span>\n          </div>,\n        ]\n      : state.roundActive\n      ? [\n          'round-active',\n          <div className=\"reaction-area-message\">\n            <span className=\"message-main\">Wait for it...</span>\n            <span className=\"message-subtitle\">Click when you see green.</span>\n          </div>,\n        ]\n      : state.testActive\n      ? [\n          'between-rounds',\n          <div className=\"reaction-area-message\">\n            <Statistic\n              className=\"result-time\"\n              value={this.state.times[this.state.times.length - 1]}\n              precision={this.timer.precision}\n              suffix=\"ms\"\n            />\n            <ScoreTable\n              data={this.state.times}\n              rounds={this.props.rounds}\n              precision={this.timer.precision}\n            />\n            <span className=\"message-small-subtitle\">\n              Click anywhere to continue...\n            </span>\n          </div>,\n        ]\n      : state.times.length > 0\n      ? [\n          'test-complete',\n          <div className=\"reaction-area-message\">\n            <span className=\"message-main\">Results</span>\n            <div className=\"results-summary\">\n              <div className=\"big-stats\">\n                <div className=\"stat-label\">Average</div>\n                <Statistic\n                  className=\"result-time\"\n                  value={mean(this.state.times)}\n                  precision={Math.min(this.timer.precision + 2, 2)}\n                  suffix=\"ms\"\n                />\n                <div className=\"stat-label\">Fastest</div>\n                <Statistic\n                  className=\"result-time\"\n                  value={Math.min(...this.state.times)}\n                  precision={this.timer.precision}\n                  suffix=\"ms\"\n                />\n              </div>\n              <div className=\"divider\" />\n              <ScoreTable\n                data={this.state.times}\n                rounds={this.props.rounds}\n                precision={this.timer.precision}\n              />\n            </div>\n            <span className=\"message-small-subtitle\">\n              Click anywhere to play again.\n            </span>\n          </div>,\n        ]\n      : [\n          'test-unstarted',\n          <div className=\"reaction-area-message\">\n            <span className=\"message-main\">Click to begin.</span>\n          </div>,\n        ];\n  }\n\n  handleTestStart = () => {\n    this.timer = getTimerInfo(); // assumes timer resolution won't change mid run.\n    this.setState(\n      (state) =>\n        state.testActive\n          ? null // won't trigger update\n          : {\n              round: 1,\n              testActive: true,\n              roundActive: false,\n              testComplete: false,\n              times: [],\n            },\n      this.handleRoundStart // callback for after state is set\n    );\n  };\n\n  handleRoundStart = () => {\n    this.setState((state, props) => {\n      if (state.roundActive) return null;\n\n      this.triggerTime = null;\n      return {\n        roundActive: true,\n        roundFailed: false,\n        triggered: false,\n        timeoutId: setTimeout(\n          () =>\n            this.setState({\n              triggered: true,\n              timeoutId: null,\n            }),\n          Math.random() * (props.maxWait - props.minWait) + props.minWait\n        ),\n      };\n    });\n  };\n\n  handleActiveTestClick = () => {\n    const now = performance.now();\n    const time = now - this.triggerTime;\n\n    this.setState((state, props) => {\n      if (!state.roundActive) return null;\n\n      const newState = {\n        roundActive: false,\n        triggered: false,\n      };\n\n      if (state.triggered) {\n        // Click arrived after test triggered; round passed\n        newState.roundFailed = false;\n        newState.times = [...state.times, time];\n\n        if (state.round < props.rounds) {\n          // more rounds to go\n          newState.round = state.round + 1;\n        } else {\n          // test complete; submit scores\n          this.submitTimes(null, newState.times, this.timer); //TODO: user?\n          newState.testActive = false;\n          newState.round = null;\n        }\n      } else {\n        // Click arrived before test triggered; round failed\n        clearTimeout(this.state.timeoutId); // stop test from triggering\n        newState.roundFailed = true;\n        newState.timeoutId = null;\n      }\n      return newState;\n    });\n  };\n\n  render() {\n    console.log(this.state);\n    const [status, message] = this.generateStatusAndMessage();\n    return (\n      <div className=\"ReactionTimeTest\">\n        <Title className=\"page-title\">Reaction Time Test</Title>\n        <Text className=\"page-subtitle\">\"Subtitle!\"</Text>\n        <Space direction=\"vertical\" size=\"large\">\n          <div\n            className={'reaction-area ' + status}\n            onMouseDown={\n              this.state.roundActive\n                ? this.handleActiveTestClick\n                : this.state.testActive\n                ? this.handleRoundStart\n                : this.handleTestStart\n            }\n          >\n            {message}\n          </div>\n          {this.state.results && (\n            <ResultsPanel type=\"ReactionTimeTest\" data={this.state.results} />\n          )}\n        </Space>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Fires (almost) immediately after newly triggered component renders. Use to set triggerTime\n    if (this.state.triggered && !this.triggerTime) {\n      this.triggerTime = performance.now();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timeoutId) {\n      clearTimeout(this.state.timeoutId);\n    }\n  }\n}\n\nReactionTimeTest.defaultProps = {\n  rounds: 5,\n  minWait: 1000, // milliseconds\n  maxWait: 5000,\n  // test settings\n  // minWait: 100, // milliseconds\n  // maxWait: 1000,\n};\n\nexport default ReactionTimeTest;\n","import React, {Component} from 'react';\nimport './AimTest.less';\nimport {\n  classConcat,\n  dist2d,\n  formatMilliseconds,\n  mapLength,\n  takeValues,\n} from './utils';\nimport {Divider, Space, Table, Typography} from 'antd';\nimport _ from 'lodash';\n\nconst {Text, Title} = Typography;\n\nconst ROUNDS = 5;\n\nfunction Target(props) {\n  const {r, pos, rings, cr, ...rest} = props;\n  const s = r - cr;\n  return (\n    <svg x={pos[0]} y={pos[1]} {...rest} className=\"Target\">\n      {mapLength(rings + 1, (n) => (\n        <circle\n          key={n}\n          r={(s * (rings - n)) / rings + cr}\n          className={classConcat(\n            'target-ring',\n            n === 0 && 'target-body', // first circle\n            n === rings && 'target-center' // last circle\n          )}\n        />\n      ))}\n    </svg>\n  );\n}\n\nTarget.defaultProps = {\n  pos: [0, 0], // x, y location\n  r: 50, // target radius\n  rings: 3, // number of rings\n  cr: 4, // center radius\n};\n\nfunction StartButton(props) {\n  return (\n    <svg x=\"50%\" y=\"50%\" className=\"StartButton\">\n      <circle {...props} className=\"button-body\" />\n      <text className=\"button-text\">{props.children}</text>\n    </svg>\n  );\n}\n\nconst RESULTS_COLUMNS = [\n  {\n    title: 'Position',\n    children: [\n      {title: 'Spawn', dataIndex: 'pos', render: ([x, y]) => `[${x}, ${y}]`},\n      {\n        title: 'Click',\n        dataIndex: 'clickPos',\n        render: ([x, y]) => `[${x}, ${y}]`,\n      },\n      {\n        title: 'Distance',\n        key: 'elapsed',\n        render: (text, row) => dist2d(row.pos, row.clickPos).toFixed(3),\n      },\n    ],\n  },\n  {\n    title: 'Time',\n    children: [\n      {title: 'Spawn', dataIndex: 'spawnTime', render: (n) => n.toFixed(3)},\n      {title: 'Click', dataIndex: 'clickTime', render: (n) => n.toFixed(3)},\n      {\n        title: 'Elapsed',\n        key: 'elapsed',\n        render: (text, row) =>\n          formatMilliseconds(row.clickTime - row.spawnTime),\n      },\n    ],\n  },\n];\n\nclass AimTest extends Component {\n  constructor(props) {\n    super(props);\n\n    /*\n    this.triggerTime = null;\n    this.state = {\n      testActive: false,\n      roundActive: false,\n      roundFailed: false,\n      triggered: false,\n      resultTime: null,\n      timeoutId: null,\n      round: null,\n      times: [],\n    };\n    * */\n\n    this.targetSpawnTime = null;\n    this.testArea = React.createRef();\n    this.state = {\n      testActive: false,\n      round: null,\n      targetPos: null,\n      results: null,\n    };\n  }\n\n  /*\n  componentDidMount() {\n    this.setState({\n      target: this.createTarget(true),\n    });\n  }\n*/\n\n  componentWillUnmount() {\n    if (!this.state.testTimeout) return;\n    this.setState((state) => {\n      clearTimeout(state.testTimeout);\n      return {testTimeout: null};\n    });\n  }\n\n  spawnRandomTarget = () => {\n    this.targetSpawnTime = null;\n    return this.testArea.current\n      ? takeValues(\n          this.testArea.current,\n          ['clientWidth', 'clientHeight'],\n          (x) => Math.floor(Math.random() * x) // integer coordinates\n        )\n      : [0, 0];\n  };\n\n  // createTarget = () => {\n  //   return {\n  //     pos: this.testArea.current\n  //       ? takeValues(\n  //           this.testArea.current,\n  //           ['clientWidth', 'clientHeight'],\n  //           (x) => Math.floor(Math.random() * x) // integer coordinates\n  //         )\n  //       : [0, 0],\n  //   };\n  // };\n\n  handleTargetClick = ({nativeEvent: event}) => {\n    const now = performance.now();\n    const targetSpawnTime = this.targetSpawnTime;\n    if (!targetSpawnTime) return; // indicates duplicate click on target, since we clear targetSpawnTime in this function.\n\n    this.targetSpawnTime = null;\n    this.setState((state, props) => {\n      const newState = {\n        testLog: [\n          ...state.testLog,\n          {\n            spawnPos: state.targetPos,\n            spawnTime: targetSpawnTime,\n            clickPos: [event.offsetX, event.offsetY],\n            clickTime: now,\n          },\n        ],\n      };\n      if (state.round < props.rounds) {\n        newState.round = state.round + 1;\n        newState.targetPos = this.spawnRandomTarget();\n      } else {\n        newState.testActive = false;\n        newState.round = null;\n        newState.targetPos = null;\n        console.log('Test done', newState.testLog);\n      }\n      return newState;\n    });\n  };\n\n  handleTestStart = () => {\n    this.setState((state) =>\n      state.testActive\n        ? null\n        : {\n            testActive: true,\n            round: 1,\n            targetPos: this.spawnRandomTarget(),\n            testLog: [],\n          }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"AimTest\" style={this.props.style}>\n        <Space direction=\"vertical\">\n          <Title className=\"main-title\">Click Test</Title>\n          <div\n            className=\"test-area-container\"\n            style={{\n              padding: this.props.targetRadius,\n              ..._.pick(this.props, [\n                'minWidth',\n                'maxWidth',\n                'minHeight',\n                'maxHeight',\n              ]),\n            }}\n          >\n            <svg\n              className=\"test-area\"\n              ref={this.testArea}\n              height={this.props.height - 2 * this.props.targetRadius}\n            >\n              {this.state.testActive ? (\n                <Target\n                  onClick={this.handleTargetClick}\n                  pos={this.state.targetPos}\n                  r={this.props.targetRadius}\n                />\n              ) : (\n                <StartButton\n                  onClick={this.handleTestStart}\n                  r={this.props.targetRadius}\n                >\n                  Start!\n                </StartButton>\n              )}\n            </svg>\n          </div>\n          <Space>\n            {this.state.testActive ? (\n              <Text key=\"remaining\">Remaining: {this.props.rounds - this.state.round}</Text>\n            ) : (\n              <Text key=\"status\">Test Inactive</Text>\n            )}\n          </Space>\n          {this.state.results && [\n            <Divider key=\"divider\">\n              <Title>Results</Title>\n            </Divider>,\n            <Table\n              key=\"table\"\n              bordered\n              pagination={false}\n              columns={RESULTS_COLUMNS}\n              dataSource={this.state.results}\n              rowKey=\"spawnTime\"\n            />,\n          ]}\n        </Space>\n      </div>\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.testActive && !this.targetSpawnTime) {\n      this.targetSpawnTime = performance.now();\n    }\n  }\n}\n\nAimTest.defaultProps = {\n  minWidth: 450,\n  maxWidth: 1000,\n  height: 500,\n  targetRadius: 50,\n  rounds: ROUNDS,\n};\n\nexport default AimTest;\n","import React, {Component} from 'react';\nimport './App.less';\nimport {Divider, Layout, Typography, Space} from 'antd';\nimport ReactionTimeTest from './ReactionTimeTest';\nimport AimTest from './AimTest';\n\nconst {Title, Text, Link} = Typography;\nconst {Header, Content, Footer} = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // Randomize order on initial load, but never change once the app has started.\n    this.footerLinks = [\n      <Link key=\"Adam\">Adam Smith</Link>,\n      <Link key=\"Aaron\">Aaron Zehm</Link>,\n    ];\n    if (Math.random() < 0.5) this.footerLinks.reverse();\n  }\n\n  render() {\n    return (\n      <Layout id=\"app-layout\">\n        <Header id=\"app-header\">\n          <Title>Senior Benchmark</Title>\n        </Header>\n        <Layout id=\"content-layout\">\n          <Content id=\"main-content\">\n            <ReactionTimeTest />\n          </Content>\n        </Layout>\n        <Footer id=\"app-footer\">\n          <div className=\"footer-content\">\n            <Text>2020</Text>\n            {this.footerLinks}\n          </div>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}